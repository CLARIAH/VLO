//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.01.22 at 04:21:50 PM CET 
//


package eu.clarin.cmdi.vlo.importer.jaxb;

import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParserFactory;
import javax.xml.transform.sax.SAXSource;

import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;

import java.io.FileInputStream;
import java.io.FileNotFoundException;

import javax.xml.bind.*;

public class ObjectFactory {
	
	private final JAXBContext context;


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     * @throws JAXBException 
     * 
     */
    public ObjectFactory() throws JAXBException {
    	this.context = JAXBContext.newInstance(this.getClass().getPackage().getName());
    }

    
    public Object unmarshal(String fileName) throws JAXBException, SAXException, ParserConfigurationException, FileNotFoundException {
    	
  	
    	// suggestion taken from http://blog.intellidiscovery.com/2011/08/jaxb-tutorial-part-2-jaxb-with-xinclude.html at 2018-01-23
    	SAXParserFactory spf = SAXParserFactory.newInstance();

    	spf.setXIncludeAware(true);
    	spf.setNamespaceAware(true);
    	spf.setValidating(true); // Not required for JAXB/XInclude

    	XMLReader xr = spf.newSAXParser().getXMLReader();
    	SAXSource source = new SAXSource(xr, new InputSource(new FileInputStream(fileName)));
    	
    	return context.createUnmarshaller().unmarshal(source);
    	
    }

}
